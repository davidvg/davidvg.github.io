<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Muerte por Checklist (Publicaciones sobre robotica)</title><link>https://davidvg.github.io/</link><description></description><atom:link href="https://davidvg.github.io/categories/robotica.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><lastBuildDate>Fri, 20 Sep 2019 18:21:57 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Simulación de circuto para lectura de tensión</title><link>https://davidvg.github.io/posts/simulacion-de-circuto-para-lectura-de-tension/</link><dc:creator>David Vázquez</dc:creator><description>&lt;div&gt;&lt;p&gt;Para un proyecto de robótica que estoy comenzando, basado en versiones de los rover marcianos de NASA, necesitaba diseñar un circuito para hacer la lectura de la corriente que circula por un motor controlado mediante un driver &lt;a class="reference external" href="https://www.allegromicro.com/~/media/Files/Datasheets/A4952-3-Datasheet.pdf"&gt;Allegro A4953&lt;/a&gt;. Este driver tiene un pin LSS en el que se puede conectar una resistencia &lt;span class="math"&gt;\(R_S\)&lt;/span&gt; para medir la corriente del motor, que se obtiene simplemente dividiendo la tensión &lt;span class="math"&gt;\(V_S\)&lt;/span&gt; en la resistencia por el valor de la misma:&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
I_{motor} = \frac{V_S}{R_S}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;Las conexiones del chip se muestran en la hoja de datos:&lt;/p&gt;
&lt;img alt="Conexiones del A4953" class="align-center" src="https://davidvg.github.io/images/a4953_conexiones.png" style="width: 300px;"&gt;
&lt;p&gt;El esquema del circuito se hizo en &lt;a class="reference external" href="http://www.kicad-pcb.org/"&gt;KiCad&lt;/a&gt; y se simuló con &lt;a class="reference external" href="http://ngspice.sourceforge.net/"&gt;ngspice&lt;/a&gt;. La tensión en la resistencia &lt;span class="math"&gt;\(R_S\)&lt;/span&gt;, &lt;span class="math"&gt;\(V_S\)&lt;/span&gt;, se simula usando una fuente de tensión (&lt;span class="math"&gt;\(V_1\)&lt;/span&gt; en el esquema) cuyo valor se hace variar entre los valores máximo y mínimo.&lt;/p&gt;
&lt;img alt="Esquema" class="align-center" src="https://davidvg.github.io/images/a4953_current_sensing.png" style="width: 70%;"&gt;
&lt;div class="section" id="calculos"&gt;
&lt;h2&gt;Cálculos&lt;/h2&gt;
&lt;div class="section" id="resistencia-r-s"&gt;
&lt;h3&gt;Resistencia &lt;span class="math"&gt;\(R_S\)&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;En la hoja de datos del driver se especifica que el valor de la tensión en la &lt;span class="math"&gt;\(R_S\)&lt;/span&gt; debe ser menor, en valor absoluto, que &lt;span class="math"&gt;\(0.5V\)&lt;/span&gt;. Para calcular esta resistencia, se da una expresión en función de &lt;span class="math"&gt;\(I_{max}\)&lt;/span&gt;, la corriente máxima que puede circular por el motor, &lt;span class="math"&gt;\(A\)&lt;/span&gt;, una ganancia interna que se define con el valor &lt;span class="math"&gt;\(10\)&lt;/span&gt;, y &lt;span class="math"&gt;\(V_{ref}\)&lt;/span&gt;, la tensión que se aplique en el pin VREF:&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
I_{max} = \frac{V_{ref}}{A R_S}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;Para una corriente máxima de &lt;span class="math"&gt;\(1.1A\)&lt;/span&gt; y &lt;span class="math"&gt;\(V_{ref} = 5V\)&lt;/span&gt;:&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
R_S = \frac{V_{ref}}{A  I_{max}} = \frac{5V}{10 \times 1.1A} = 0.45 \Omega
\end{equation*}
&lt;/div&gt;
&lt;p&gt;Eligiendo  &lt;span class="math"&gt;\(R_S = 0.4 \Omega\)&lt;/span&gt;, la tensión máxima que se tendrá en LSS es, en valor absoluto, &lt;span class="math"&gt;\(V_S = 0.4 \Omega \times 1.1A = 0.44V &amp;lt; 0.5V\)&lt;/span&gt;, por lo que la tensión en LSS estará comprendida entre &lt;span class="math"&gt;\(-0.44V\)&lt;/span&gt; y &lt;span class="math"&gt;\(+0.44V\)&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="adaptacion-de-tensiones"&gt;
&lt;h3&gt;Adaptación de tensiones&lt;/h3&gt;
&lt;p&gt;Este rango de tensiones será leído mediante el &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Conversor_de_se%C3%B1al_anal%C3%B3gica_a_digital"&gt;conversor analógico/digital (ADC)&lt;/a&gt; de un &lt;a class="reference external" href="https://store.arduino.cc/arduino-nano"&gt;Arduino Nano&lt;/a&gt;, que registra tensiones entre &lt;span class="math"&gt;\(0\)&lt;/span&gt; y &lt;span class="math"&gt;\(5V\)&lt;/span&gt; con una resolución de 10 bit (1024 cuentas), por lo que es necesario adaptar estas tensiones a valores adecuados para tener una resolución decente en la lectura. Idealmente, se intentaría usar todo el rango &lt;span class="math"&gt;\((0V, 5V)\)&lt;/span&gt; del ADC, pero conviene dejar márgenes de seguridad para asegurar que no se alcanzan los máximos y para evitar que el amplificador operacional que hará la adaptación trabaje en los extremos (&lt;span class="math"&gt;\(0V\)&lt;/span&gt; y &lt;span class="math"&gt;\(VCC\)&lt;/span&gt;), lo que puede producir valores erróneos.&lt;/p&gt;
&lt;p&gt;La adaptación de tensiones se realiza usando un &lt;a class="reference external" href="http://www.ti.com/lit/ds/symlink/lm358.pdf"&gt;amplificador operacional LM358&lt;/a&gt; configurado como &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Amplificador_operacional#Amplificador_no_inversor"&gt;amplificador no inversor&lt;/a&gt;. En esta configuración, la ganancia es positiva, por lo que el primer obstáculo está en transformar el rango de tensiones en LSS para que todas sean positivas. Para ello se coloca en serie con la tensión &lt;span class="math"&gt;\(V_S\)&lt;/span&gt; un diodo alimentado desde el pin de &lt;span class="math"&gt;\(3.3V\)&lt;/span&gt; del Arduino que sumará su tensión de codo, unos &lt;span class="math"&gt;\(0.66V\)&lt;/span&gt; de promedio, al valor de &lt;span class="math"&gt;\(V_S\)&lt;/span&gt;, por lo que se pasa a tener un rango de tensiones &lt;span class="math"&gt;\((Vd-Vs, Vd+Vs) = (0.23V, 1.09V)\)&lt;/span&gt;, todas positivas. Estas tensiones, &lt;span class="math"&gt;\(V_M\)&lt;/span&gt; en el esquema y en la gráfica, se pasan como entrada a la etapa amplificadora para adaptarlas al rango &lt;span class="math"&gt;\((0V, 5V)\)&lt;/span&gt; del ADC.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="amplificador-operacional"&gt;
&lt;h3&gt;Amplificador operacional&lt;/h3&gt;
&lt;p&gt;La ganancia del amplificador no inversor viene dada, en este circuito, por&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
A_v = 1 + \frac{R_4}{R_2+R_3}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;y la tensión en la salida será&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
V_{OUT} = A_v   V_M
\end{equation*}
&lt;/div&gt;
&lt;p&gt;Según las especificaciones del LM358, en la salida de este operacional se pueden obtener tensiones entre &lt;span class="math"&gt;\(0V\)&lt;/span&gt; y &lt;span class="math"&gt;\(VCC-1.5V\)&lt;/span&gt;, por lo que si fijamos un valor máximo aproximado de tensión en el ADC de &lt;span class="math"&gt;\(4.5V\)&lt;/span&gt; se tiene que VCC debe ser igual a &lt;span class="math"&gt;\(6V\)&lt;/span&gt;, que es una de las tensiones que se va a usar en la placa definitiva. Ese valor máximo también da un margen de seguridad en la tensión medida en el ADC.&lt;/p&gt;
&lt;p&gt;Para obtener &lt;span class="math"&gt;\(4.5V\)&lt;/span&gt; en la salida cuando se tienen &lt;span class="math"&gt;\(1.09V\)&lt;/span&gt; enla entrada necesitamos una ganancia de tensión igual a&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
\frac{4.5V}{1.09V} = 4.13 = 1 + \frac{R_4}{R_2+R_3}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;por lo que la relación &lt;span class="math"&gt;\(\frac{R_4}{R_2+R_3}\)&lt;/span&gt; tiene que ser menor o igual a &lt;span class="math"&gt;\(3.13\)&lt;/span&gt; para no sobrepasar los &lt;span class="math"&gt;\(4.5V\)&lt;/span&gt;.  Seleccionando &lt;span class="math"&gt;\(R_2+R_3 = 110 \: k \Omega\)&lt;/span&gt; y &lt;span class="math"&gt;\(R_4 = 330 \:k \Omega\)&lt;/span&gt; se obtiene una relación de &lt;span class="math"&gt;\(3\)&lt;/span&gt; y una ganancia &lt;span class="math"&gt;\(A_v = 4\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Con esta ganancia el rango de tensiones en la salida del amplificador será&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
V_{OUT} = (A_v \times 0.23, \: Av \times 1.09) = (0.90V, \: 4.35V)
\end{equation*}
&lt;/div&gt;
&lt;p&gt;que se corresponden con valores medidos en el ADC de &lt;span class="math"&gt;\((184, 890)\)&lt;/span&gt;, utilizando un &lt;span class="math"&gt;\(69 \%\)&lt;/span&gt; del rango del ADC.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="simulacion"&gt;
&lt;h3&gt;Simulación&lt;/h3&gt;
&lt;p&gt;La gráfica siguiente muestra el resultado de la simulación para los parámetros &lt;span class="math"&gt;\(V_S\)&lt;/span&gt;, &lt;span class="math"&gt;\(V_M\)&lt;/span&gt; y &lt;span class="math"&gt;\(V_{OUT}\)&lt;/span&gt; cuando &lt;span class="math"&gt;\(V_S\)&lt;/span&gt; se hace variar entre &lt;span class="math"&gt;\(-0.44V\)&lt;/span&gt; y &lt;span class="math"&gt;\(+0.44V\)&lt;/span&gt;.&lt;/p&gt;
&lt;img alt="Plot" class="align-center" src="https://davidvg.github.io/images/output.jpg" style="width: 50%;"&gt;
&lt;p&gt;La simulación devuelve los siguientes valores de las tensiones &lt;span class="math"&gt;\(V_M\)&lt;/span&gt;, tras sumar la tensión de codo del diodo, y &lt;span class="math"&gt;\(V_{OUT}\)&lt;/span&gt;, a la salida del amplificador, para los casos en que &lt;span class="math"&gt;\(V_S\)&lt;/span&gt; toma los valores mínimo, &lt;span class="math"&gt;\(0\)&lt;/span&gt; y máximo:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="33%"&gt;
&lt;col width="30%"&gt;
&lt;col width="37%"&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;&lt;span class="math"&gt;\(V_S\)&lt;/span&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;span class="math"&gt;\(V_M\)&lt;/span&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;span class="math"&gt;\(V_{OUT}\)&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;span class="math"&gt;\(-0.44\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0.23\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0.90\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span class="math"&gt;\(0.00\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(0.66\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(2.63\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;span class="math"&gt;\(+0.44\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(1.09\)&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;span class="math"&gt;\(4.35\)&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Se puede ver cómo &lt;span class="math"&gt;\(V_M\)&lt;/span&gt; toma valores siempre positivos, por lo que no hay problemas en el amplificador. También se ve que la tensión a la salida está en el rango del conversor ACD.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="resolucion-en-corriente"&gt;
&lt;h2&gt;Resolución en corriente&lt;/h2&gt;
&lt;p&gt;Se puede calcular la resolución de la medida de corriente por el motor, es decir cuánto cambia la corriente por cada cuenta del ADC.&lt;/p&gt;
&lt;p&gt;La tensión de salida del amplificador es:&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
V_{OUT} = A_v(R_S i_S + V_d)
\end{equation*}
&lt;/div&gt;
&lt;p&gt;siendo &lt;span class="math"&gt;\(i_S\)&lt;/span&gt; la corriente que circula por &lt;span class="math"&gt;\(R_S\)&lt;/span&gt; (se desprecia la corrientes que circula por el diodo, del orden de &lt;span class="math"&gt;\(1 mA\)&lt;/span&gt;) y &lt;span class="math"&gt;\(V_d\)&lt;/span&gt; la tensión de codo en el diodo.&lt;/p&gt;
&lt;p&gt;Expresado como cuentas del ADC:&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
N = \frac{1024}{5}  V_{OUT}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;Si tomamos dos medidas consecutivas del ADC, &lt;span class="math"&gt;\(N1\)&lt;/span&gt; y &lt;span class="math"&gt;\(N2 = N1 + 1\)&lt;/span&gt;:&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
N2 - N1 = \frac{1024}{5} Av (R_S i_2 + V_d) - \frac{1024}{5} Av (R_S i_1 + V_d)
\end{equation*}
&lt;/div&gt;
&lt;p&gt;Operando:&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
1 = \frac{1024}{5} Av R_S (i_2 - i_1)
\end{equation*}
&lt;/div&gt;
&lt;p&gt;y se tiene:&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
i2 - i1 = \Delta i = \frac{5}{1024 \: A_v R_S} = 3.05 \dfrac{mA}{cuenta}
\end{equation*}
&lt;/div&gt;
&lt;p&gt;Es decir, se tiene una resolución en la medida de corriente que circula por el motor de unos &lt;span class="math"&gt;\(3 \: mA\)&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>electronica</category><category>kicad</category><category>motor</category><category>robotica</category><category>spice</category><guid>https://davidvg.github.io/posts/simulacion-de-circuto-para-lectura-de-tension/</guid><pubDate>Tue, 11 Jun 2019 11:29:55 GMT</pubDate></item><item><title>Turtlebot3</title><link>https://davidvg.github.io/posts/turtlebot3/</link><dc:creator>David Vázquez</dc:creator><description>&lt;div&gt;&lt;p&gt;Este año los Reyes Magos se han puesto espléndidos y me han traído un &lt;a href="http://www.robotis.us/turtlebot-3/"&gt;Turtlebot3&lt;/a&gt;, el modelo Burger para ser más exactos. Bueno, en realidad no han sido los Reyes, sino que me lo he auto-regalado.&lt;/p&gt;
&lt;!-- &lt;img style="float: center;" src="/home/david/git/blog/output/images/turtlebot3.jpg" width=480 &gt; --&gt;

&lt;p&gt;&lt;img alt="turtlebot3" src="https://davidvg.github.io/images/turtlebot3.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Aunque también sirve para pasar un buen rato jugando con él, en realidad es una plataforma de desarrollo de robótica, ya que es un robot modular y totalmente personalizable. Es un robot de dos ruedas y una bola que actúa como rueda castor o giratoria. Se organiza en 4 niveles mediante plataformas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nivel 1: aloja los motores y la batería.&lt;/li&gt;
&lt;li&gt;Nivel 2: en él se encuentra la placa &lt;a href="http://wiki.ros.org/opencr"&gt;OpenCR&lt;/a&gt;, basada en &lt;a href="https://www.arduino.cc/"&gt;Arduino&lt;/a&gt;, y que incluye el hardware necesario para implementar el Turtlebot3: sensores, drivers para motores, interfaces de comunicaciones, etc.&lt;/li&gt;
&lt;li&gt;Nivel 3: en él se coloca la &lt;a href="https://www.raspberrypi.org/products/raspberry-pi-3-model-b/"&gt;Raspberry Pi 3&lt;/a&gt; en la que se ejecuta &lt;a href="http://www.ros.org/"&gt;ROS&lt;/a&gt;, el sistema operativo del robot. También tiene espacio suficiente para añadir más sensores o componentes.&lt;/li&gt;
&lt;li&gt;Nivel 4: es el nivel superior y sobre el que se coloca el &lt;a href="https://en.wikipedia.org/wiki/Lidar"&gt;LIDAR&lt;/a&gt;, que se emplea para medir distancias y que a grandes rasgos es similar al &lt;a href="https://es.wikipedia.org/wiki/Radar"&gt;RADAR&lt;/a&gt; pero usando la luz de un láser.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Como cada nivel es idéntico a los demás, se pueden añadir más niveles si se necesitan.&lt;/p&gt;
&lt;p&gt;El proyecto es &lt;a href="https://es.wikipedia.org/wiki/C%C3%B3digo_abierto"&gt;código&lt;/a&gt; abierto, u open source, tanto el &lt;a href="https://es.wikipedia.org/wiki/Hardware_libre"&gt;hardware&lt;/a&gt; como el &lt;a href="https://es.wikipedia.org/wiki/Software_libre"&gt;software&lt;/a&gt;, por lo que es posible modificarlo, adaptarlo y configurarlo a medida. Todas las partes que forman los niveles, los mecanismos de sujeción, etc. se pueden imprimir en una impresora 3D usando los diseños que están disponibles en la web.&lt;/p&gt;
&lt;p&gt;De momento estoy haciendo pruebas, ya que el Turtlebot3 se desarrolló para la versión de ROS Kinetic Kame, que a su vez es compatible con &lt;a href="https://www.ubuntu.com/"&gt;Ubuntu&lt;/a&gt; 16.04, mientras que yo tengo instalado Ubuntu 18.04, para la que Kinetic no es compatible; sí lo es la última versión disponible de ROS, Melodic Morenia, a la que se está portando el código de Turtlebot3.&lt;/p&gt;
&lt;p&gt;Hasta ahora he conseguido que funcionen sin demasiados problemas los modos básicos de teleoperación del robot, mediante teclado y joystick, y las funciones básicas de &lt;a href="https://es.wikipedia.org/wiki/Localizaci%C3%B3n_y_modelado_simult%C3%A1neos"&gt;SLAM&lt;/a&gt; y cartografiado, así como la navegación autónoma básica usando el mapa creado.&lt;/p&gt;&lt;/div&gt;</description><category>robotica</category><category>slam</category><category>turtlebot</category><category>turtlebot3</category><guid>https://davidvg.github.io/posts/turtlebot3/</guid><pubDate>Thu, 24 Jan 2019 16:00:00 GMT</pubDate></item></channel></rss>